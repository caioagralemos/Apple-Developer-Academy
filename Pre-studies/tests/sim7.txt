1. In Swift programming, how do you define a constant that can be accessed globally across the application without changing its value?
   - a. var globalConstant
   - b. let globalConstant
   - c. static let globalConstant
   - d. global var globalConstant

2. Which of the following is a fundamental concept of responsive design in Swift?
   - a. Using fixed dimensions for all UI elements
   - b. Utilizing Auto Layout and Size Classes
   - c. Avoiding the use of stack views
   - d. Ignoring device orientation changes

3. What principle of the Apple Human Interface Guidelines emphasizes the importance of feedback in user interface design?
   - a. Clarity
   - b. Depth
   - c. Direct Manipulation
   - d. Feedback

4. In object-oriented programming (OOP), encapsulation is used to:
   - a. Combine methods and attributes into a single unit
   - b. Allow objects to change their type at runtime
   - c. Ensure that objects can be used interchangeably
   - d. Create multiple instances of a class simultaneously

5. The Singleton design pattern in Swift ensures that:
   - a. A class has only one instance and provides a global point of access to it
   - b. An object can adopt multiple interfaces or classes
   - c. Objects can be copied and cloned
   - d. A class can change its behavior when its internal state changes

6. Which of the following best describes a protocol in Swift?
   - a. A set of optional requirements for a type
   - b. A blueprint of methods, properties, and other requirements that suit a particular task or piece of functionality
   - c. An alternative to generic types
   - d. A way to define multiple inheritance in Swift

7. When creating user-centered design processes, which step is crucial for understanding the user's needs and problems?
   - a. Prototyping
   - b. User testing
   - c. Empathy mapping
   - d. High-fidelity design

8. Logical reasoning question: If all Swift programmers are skilled in OOP, and some OOP programmers are also UI designers, which of the following statements must be true?
   - a. All UI designers are Swift programmers
   - b. Some Swift programmers are UI designers
   - c. No UI designers are Swift programmers
   - d. All OOP programmers are Swift programmers

9. How do you implement a computed property in Swift?
   - a. By declaring it with the `computed` keyword
   - b. By providing a getter and, optionally, a setter to indirectly retrieve and set other properties and values
   - c. By using the `@computed` property wrapper
   - d. By initializing it with a specific value

10. In the context of Swift, what does "type inference" refer to?
    - a. The process of explicitly declaring the type of every variable
    - b. The compiler's ability to automatically determine the type of an expression
    - c. The requirement to specify types for all collections
    - d. The use of type aliases to simplify complex type definitions

11. What is the main advantage of using the Model-View-Controller (MVC) design pattern in Swift applications?
    - a. It allows for direct manipulation of the model by the view
    - b. It simplifies data persistence by combining logic and presentation
    - c. It facilitates easier testing and maintenance by separating concerns
    - d. It eliminates the need for view controllers

12. When implementing the Observer pattern in Swift, which of the following is key to notifying observers about changes to an object's state?
    - a. Delegation
    - b. Notification Center
    - c. KVO (Key-Value Observing)
    - d. Protocols

13. In Swift, what is an "unwrapped optional"?
    - a. A value that is guaranteed to be non-nil
    - b. An optional that has been checked for nil values
    - c. A mechanism to safely access the value of an optional
    - d. An optional that does not need to be declared

14. For creating adaptive layouts in Swift, what is essential to support different screen sizes and orientations?
    - a. Hardcoding frame sizes
    - b. Using UIViewAutoresizingFlexibleWidth
    - c. Employing Auto Layout and constraints
    - d. Disabling rotation support

15. What is the purpose of wireframes in the design process?
    - a. To define the final visual design of an application
    - b. To outline the application's architecture
    - c. To provide a detailed guide for back-end development
    - d. To lay out the structure of pages and navigation

16. How can logical reasoning help in programming, specifically in debugging Swift code?
    -

 a. By guessing the causes of bugs
    - b. Through systematic elimination of possible error sources
    - c. By randomly changing parts of the code
    - d. Through extensive use of breakpoints only

17. What Swift feature allows you to ensure that a class has only one instance across the application?
    - a. Global variables
    - b. Class inheritance
    - c. Singleton pattern
    - d. Static methods

18. In the context of user interface design, what does "affordance" refer to?
    - a. The aesthetic appeal of an interface
    - b. The support system for users facing issues
    - c. The visual cues that indicate the function of an object
    - d. The documentation provided to help users understand the UI

19. When discussing Swift's error handling, which keyword is used to define a block of code that can throw an error?
    - a. `try`
    - b. `throw`
    - c. `catch`
    - d. `do`

20. How is a "tuple" used in Swift programming?
    - a. To define a new subclass
    - b. To group multiple values into a single compound value
    - c. To declare a variable type that can hold any data type
    - d. To manage memory allocation

21. What role does "inheritance" play in Swift's object-oriented programming?
    - a. It prevents classes from sharing code
    - b. It allows one class to inherit the properties and methods of another
    - c. It restricts classes to a single parent class
    - d. It is used to define protocols

22. In user-centered design, why is it important to conduct usability testing?
    - a. To increase development time
    - b. To gather feedback on the design's visual appeal only
    - c. To understand how users interact with your product and identify any issues
    - d. To finalize the product's color scheme

23. How do you declare a dictionary in Swift with String keys and Integer values?
    - a. `var dict: Dictionary<String, Int>`
    - b. `var dict: [String: Int]`
    - c. `let dict: {String, Int}`
    - d. `var dict = <String, Int>()`

24. What does "agile methodology" emphasize in the software development process?
    - a. Extensive planning before any code is written
    - b. Flexibility, customer feedback, and iterative development
    - c. Complete documentation before starting development
    - d. Long development cycles to ensure perfection

25. When creating sketches for an application, what is the primary goal?
    - a. To create a detailed and accurate representation of the final product
    - b. To quickly communicate ideas and concepts
    - c. To choose the application's color scheme
    - d. To finalize the user interface elements

26. What is a "closure" in Swift?
    - a. A way to reference and use functions
    - b. Self-contained blocks of functionality that can be passed around and used in your code
    - c. A method for closing an application
    - d. A pattern for creating singletons

27. How does the "Decorator" design pattern work in Swift?
    - a. By allowing classes to change behavior at runtime
    - b. By adding responsibilities to an object dynamically, without altering its structure
    - c. By defining new ways to compose objects to obtain new functionalities
    - d. By ensuring only one instance of a class is created

28. In logical reasoning, what is a "syllogism"?
    - a. A programming paradigm
    - b. A logical argument that applies deductive reasoning to arrive at a conclusion based on two propositions
    - c. An error in reasoning
    - d. A data structure

29. Which Swift feature allows the creation of complex UIs with declarative syntax?
    - a. UIKit
    - b. SwiftUI
    - c. Cocoa Touch
    - d. Core Animation

30. What is the benefit of using prototypes in the design process?
    - a. They provide a high-fidelity, final version of the product
    - b. They allow for exploring design concepts without detailed coding
    - c. They are primarily used for backend development
    - d. They replace the need for user testing