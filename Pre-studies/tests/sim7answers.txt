Here are the answers to the questions:

1. c. static let globalConstant
2. b. Utilizing Auto Layout and Size Classes
3. d. Feedback
4. a. Combine methods and attributes into a single unit
5. a. A class has only one instance and provides a global point of access to it
6. b. A blueprint of methods, properties, and other requirements that suit a particular task or piece of functionality
7. c. Empathy mapping
8. b. Some Swift programmers are UI designers
9. b. By providing a getter and, optionally, a setter to indirectly retrieve and set other properties and values
10. b. The compiler's ability to automatically determine the type of an expression
11. c. It facilitates easier testing and maintenance by separating concerns
12. b. Notification Center
13. a. A value that is guaranteed to be non-nil
14. c. Employing Auto Layout and constraints
15. d. To lay out the structure of pages and navigation
16. b. Through systematic elimination of possible error sources
17. c. Singleton pattern
18. c. The visual cues that indicate the function of an object
19. d. `do`
20. b. To group multiple values into a single compound value
21. b. It allows one class to inherit the properties and methods of another
22. c. To understand how users interact with your product and identify any issues
23. b. `var dict: [String: Int]`
24. b. Flexibility, customer feedback, and iterative development
25. b. To quickly communicate ideas and concepts
26. b. Self-contained blocks of functionality that can be passed around and used in your code
27. b. By adding responsibilities to an object dynamically, without altering its structure
28. b. A logical argument that applies deductive reasoning to arrive at a conclusion based on two propositions
29. b. SwiftUI
30. b. They allow for exploring design concepts without detailed coding